/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 2012-4-29, 17:15:16
 */
package view;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.UnknownHostException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import logic.VoiceClient;
import board.*;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import logic.MeetingReceiver;
import logic.OrderClient;
import manager.ClientManager;
import manager.ServiceManager;
import rmi.client.interfaces.MeetingReceiverInterface;
import rmi.server.interfaces.MeetingControlService;
import rmi.server.interfaces.MemberControlInterface;

/**
 *
 * @author Gyx
 */
public class MainFrame extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public MainFrame() {
        
        initComponents();
        initialize();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        boardPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        voicePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        stopButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        stateLabel = new javax.swing.JLabel();
        meetingNoLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jchatPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jTabbedPane1.setFont(jLabel1.getFont());
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1018, 650));
        jTabbedPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyReleased(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(1013, 622));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanel1KeyReleased(evt);
            }
        });

        boardPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boardPanel.setMaximumSize(new java.awt.Dimension(653, 546));
        boardPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boardPanelKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 675, Short.MAX_VALUE)
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 564, Short.MAX_VALUE)
        );

        jScrollPane1.setFocusable(false);

        jList1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jList1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));
        jList1.setAutoscrolls(false);
        jList1.setFocusable(false);
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 1, 14));
        jLabel1.setText("Online Member");
        jLabel1.setFocusable(false);

        voicePanel.setFocusable(false);
        voicePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                voicePanelMouseReleased(evt);
            }
        });

        jLabel2.setFont(jLabel1.getFont());
        jLabel2.setText("MicroPhone Volume:");
        jLabel2.setFocusable(false);

        jLabel3.setFont(jLabel1.getFont());
        jLabel3.setText("Speaker Volume:");
        jLabel3.setFocusable(false);

        jButton1.setFont(jLabel1.getFont());
        jButton1.setText("Voice Setting");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSlider1.setMinorTickSpacing(20);
        jSlider1.setPaintTicks(true);
        jSlider1.setValue(100);
        jSlider1.setFocusable(false);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jSlider2.setMinorTickSpacing(20);
        jSlider2.setPaintTicks(true);
        jSlider2.setValue(100);
        jSlider2.setFocusable(false);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });

        javax.swing.GroupLayout voicePanelLayout = new javax.swing.GroupLayout(voicePanel);
        voicePanel.setLayout(voicePanelLayout);
        voicePanelLayout.setHorizontalGroup(
            voicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        voicePanelLayout.setVerticalGroup(
            voicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voicePanelLayout.createSequentialGroup()
                .addGroup(voicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(voicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3))
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel4MouseReleased(evt);
            }
        });

        stopButton.setFont(jLabel1.getFont());
        stopButton.setText("Stop Meeting");
        stopButton.setFocusable(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        startButton.setFont(jLabel1.getFont());
        startButton.setText("Start Meeting");
        startButton.setFocusable(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stateLabel.setFont(jLabel1.getFont());
        stateLabel.setText("Meeting State:On");
        stateLabel.setFocusable(false);

        meetingNoLabel.setFont(jLabel1.getFont());
        meetingNoLabel.setText("Meeting No: null");
        meetingNoLabel.setFocusable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(meetingNoLabel)
                    .addComponent(startButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stateLabel)
                    .addComponent(stopButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stateLabel)
                .addGap(18, 18, 18)
                .addComponent(meetingNoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(startButton)
                .addGap(18, 18, 18)
                .addComponent(stopButton)
                .addGap(24, 24, 24))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Draw Order"));
        jPanel5.setFont(jLabel1.getFont());
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel5MouseReleased(evt);
            }
        });

        jScrollPane3.setFocusable(false);
        jScrollPane3.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 18));

        jList2.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));
        jList2.setFocusable(false);
        jScrollPane3.setViewportView(jList2);

        jButton3.setFont(jLabel1.getFont());
        jButton3.setText("Get in");
        jButton3.setFocusable(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton3MouseReleased(evt);
            }
        });

        jButton4.setFont(jLabel1.getFont());
        jButton4.setText("Cut in");
        jButton4.setFocusable(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton4MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jchatPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jchatPanelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jchatPanelLayout = new javax.swing.GroupLayout(jchatPanel);
        jchatPanel.setLayout(jchatPanelLayout);
        jchatPanelLayout.setHorizontalGroup(
            jchatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        jchatPanelLayout.setVerticalGroup(
            jchatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 361, Short.MAX_VALUE)
        );

        jLabel4.setFont(jLabel1.getFont());
        jLabel4.setText("Chat Panel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(jchatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(voicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jchatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(voicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(2, 2, 2))
        );

        jTabbedPane1.addTab("Meeting", jPanel1);

        jMenuBar1.setFocusable(false);

        jMenu3.setText("Help");
        jMenu3.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));

        jMenuItem1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));
        jMenuItem1.setText("About");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseReleased(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1051, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
// TODO add your handling code here:
    checkPress(evt);
}//GEN-LAST:event_formKeyPressed

private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
// TODO add your handling code here:
    this.requestFocus();
}//GEN-LAST:event_formMousePressed

private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
// TODO add your handling code here:
    checkRelease(evt);
}//GEN-LAST:event_formKeyReleased

private void jTabbedPane1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane1KeyReleased
// TODO add your handling code here:
    checkRelease(evt);
}//GEN-LAST:event_jTabbedPane1KeyReleased

private void jTabbedPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane1KeyPressed
// TODO add your handling code here:
    checkPress(evt);
}//GEN-LAST:event_jTabbedPane1KeyPressed

private void jPanel1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyReleased
// TODO add your handling code here:
    checkRelease(evt);
}//GEN-LAST:event_jPanel1KeyReleased

private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
// TODO add your handling code here:
     checkPress(evt);
}//GEN-LAST:event_jPanel1KeyPressed

private void jchatPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jchatPanelMouseReleased
// TODO add your handling code here:
    this.requestFocus();
}//GEN-LAST:event_jchatPanelMouseReleased

private void jPanel5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseReleased
// TODO add your handling code here:
    this.requestFocus();
}//GEN-LAST:event_jPanel5MouseReleased

private void jButton4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseReleased
// TODO add your handling code here:
    if(jButton4.isEnabled()){
        if(orderclient.cutin()){
            jButton3.setText("Get out");
        }
        new Thread(new Runnable(){

            @Override
            public void run() {
                jButton4.setEnabled(false);
                for(int i=20;i>0;i--){
                    jButton4.setText("Cut in:"+i);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                jButton4.setText("Cut in");
                jButton4.setEnabled(true);
            }
        }).start();
    }
}//GEN-LAST:event_jButton4MouseReleased

private void jButton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseReleased
// TODO add your handling code here:
    if(jButton3.isEnabled()){
        if (jButton3.getText().equals("Get in")){
            orderclient.getin();
            jButton3.setText("Get out");
        }else{
            orderclient.exit();
            jButton3.setText("Get in");
        }
    }
}//GEN-LAST:event_jButton3MouseReleased

private void jPanel4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseReleased
// TODO add your handling code here:
    this.requestFocus();
}//GEN-LAST:event_jPanel4MouseReleased

private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        try {
            mcs.startMeeting(ClientManager.getUserName());
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_startButtonActionPerformed

private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        try {
            // TODO add your handling code here:
               int i=mcs.stopMeeting(ClientManager.getUserName());
               if(i==0){
                   JOptionPane.showMessageDialog(null, "More than half of you don't allow stopping the meeting.");
               }
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_stopButtonActionPerformed

private void voicePanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voicePanelMouseReleased
// TODO add your handling code here:
    this.requestFocus();
}//GEN-LAST:event_voicePanelMouseReleased

private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
// TODO add your handling code here:
    int x=jSlider2.getValue();
    voiceClient.setPlaybackVolume(x);
}//GEN-LAST:event_jSlider2StateChanged

private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
// TODO add your handling code here:
    int x=jSlider1.getValue();
    voiceClient.setCaptureVolume(x);
}//GEN-LAST:event_jSlider1StateChanged

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    vs.setVisible(true);
}//GEN-LAST:event_jButton1ActionPerformed

private void boardPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boardPanelKeyPressed
// TODO add your handling code here:
     checkPress(evt);
}//GEN-LAST:event_boardPanelKeyPressed

private void jMenuItem1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseReleased
// TODO add your handling code here:
    new AboutFrame().setVisible(true);
}//GEN-LAST:event_jMenuItem1MouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boardPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jchatPanel;
    private javax.swing.JLabel meetingNoLabel;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JButton stopButton;
    private javax.swing.JPanel voicePanel;
    // End of variables declaration//GEN-END:variables

    private int meetingState=0;
    private int meetingNo;
    private VoiceClient voiceClient;
    private MeetingControlService mcs;
    private MemberControlInterface membercs;
    private ChatPanel cp;
    private PaintBoard paintBoard;
    private DefaultListModel memberModel;
    private DefaultListModel orderModel;
    private OrderClient orderclient;
    private VoiceSetting vs;
    private MeetingReceiverInterface mri;
    
    private void initialize() {
        this.setTitle(ClientManager.getUserName());

        try {
            mri=new MeetingReceiver();
            orderclient=new OrderClient(ClientManager.getUserName());
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    	paintBoard = new PaintBoard();
        paintBoard.setAccess(1);
        boardPanel.add(paintBoard);
        cp=new ChatPanel();
        jchatPanel.setLayout(new BorderLayout());
        jchatPanel.add(cp,BorderLayout.CENTER);
        
        memberModel=new DefaultListModel();
        orderModel=new DefaultListModel();
        jList1=new JList(memberModel);
        jList1.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));
        jList2=new JList(orderModel);
        jList2.setFont(new java.awt.Font("Î¢ÈíÑÅºÚ", 0, 14));
        jScrollPane1.setViewportView(jList1);
        jScrollPane3.setViewportView(jList2);
        
        try {
            membercs=ServiceManager.getMemberControlService();
        } catch (NotBoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            mcs=ServiceManager.getMeetingControlService();
        } catch (NotBoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        refreshMeetingState();
        refreshMembers();
        refreshOrder();
        voiceClient=new VoiceClient();
        new Thread(voiceClient).start();
        vs=new VoiceSetting(voiceClient);
        
        setLocate();
        
        jTabbedPane1.addTab("FileShare",new FileSharePanel());
    }

    private void refreshMeetingState() {
        new Thread(new Runnable(){

            @Override
            public void run() {
                int pState=-1;
                while(true){
                    try {
                        meetingState=mcs.getMeetingState();
                        meetingNo=mcs.getMeetingNo();
                    } catch (RemoteException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                        //set list
                    if(pState!=meetingState){
                        if(meetingState==1){
                            stateLabel.setText("Meeting State:On");
                            startButton.setEnabled(false);
                            stopButton.setEnabled(true);
                            jButton3.setEnabled(true);
                            if(jButton4.getText().equals("Cut in"))
                                jButton4.setEnabled(true);
                            refreshMeetingNo();
                            paintBoard.onStartMeeting();
                            cp.startMeeting();
                        }
                        else{
                            stateLabel.setText("Meeting State:Off");
                            startButton.setEnabled(true);
                            stopButton.setEnabled(false);
                            jButton3.setEnabled(false);
                            jButton4.setEnabled(false);
                            if(orderclient.getC()==1){
                                orderclient.exit();
                                jButton3.setText("Get in");
                            }
                            paintBoard.setAccess(0);
                            deleteMeetingNo();
                            paintBoard.onStopMeeting();
                            cp.endMeeting();
                        }
                    }
                    pState=meetingState;
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            private void refreshMeetingNo() {
                meetingNoLabel.setText("Meeting No:"+meetingNo);
            }

            private void deleteMeetingNo() {
                meetingNoLabel.setText("Meeting No: null");
            }
            
        }).start();
    }

    private void refreshMembers() {
        new Thread(new Runnable(){

            @Override
            public void run() {
                while(true){
                    try {
                        membercs.refreshMember(ClientManager.getUserName(),mri);
                        ArrayList<String> names=membercs.getIDs();
                        memberModel.clear();
                        for(String e:names)
                            memberModel.addElement(e);
                        Thread.sleep(1000);
                    } catch (RemoteException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            
        }).start();
    }

    private void refreshOrder() {
        new Thread(new Runnable(){

            @Override
            public void run() {
                while(true){
                    ArrayList<String> names=orderclient.getOrder();
                    if(orderclient.getC()==1){
                        orderclient.refresh();
                        if (names.size()>0 && names.get(0).equals(ClientManager.getUserName()))
                            paintBoard.setAccess(2);
                        else
                            paintBoard.setAccess(1);
                    }else
                        paintBoard.setAccess(1);
                    
                    orderModel.clear();
                    for(int i=0;i<names.size();i++)
                        orderModel.addElement(names.get(i));
                    
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            
        }).start();
    }
    
    private void checkPress(java.awt.event.KeyEvent evt){
        if(evt.getKeyCode()==voiceClient.keycode)
            voiceClient.setCaptureAccess(true);
    }

    private void checkRelease(java.awt.event.KeyEvent evt){
        if(evt.getKeyCode()==voiceClient.keycode)
            voiceClient.setCaptureAccess(false);
    }

    private void setLocate(){
        Toolkit kit=Toolkit.getDefaultToolkit();
        Dimension s=kit.getScreenSize();
        this.setLocation((s.width-this.getWidth())/2, (s.height-this.getHeight())/5*2);
        vs.setLocation((s.width-vs.getWidth())/2, (s.height-vs.getHeight())/5*4);
    }

}
